{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to FedImpute FedImpute is a benchmarking and evaluation tool to assess the effectiveness of federated imputation across various missing data scenarios. Installation Install python >= 3.8.0 python -m venv ./venv # window gitbash source ./venv/Scripts/activate # linux/unix source ./venv/bin/activate Install the required packages pip install -r requirements.txt Basic Usage Step 1. Prepare Data import numpy as np data = np.random.rand(10000, 10) data_config = { 'task_type': 'regression', 'num_cols': 9, } Step 2. Simulate Federated Missing Data Scenario from fedimpute.simulator import Simulator simulator = Simulator() simulation_results = simulator.simulate_scenario( data, data_config, num_clients = 10, dp_strategy='iid-even', ms_mech_type='mcar', verbose=1 ) Step 3. Execute Federated Imputation Algorithms from fedimpute.execution_environment import FedImputeEnv env = FedImputeEnv() env.configuration(imputer = 'gain', fed_strategy='fedavg', fit_mode = 'fed') env.setup_from_simulator(simulator = simulator, verbose=1) env.run_fed_imputation() Step 4. Evaluate imputation outcomes from fedimpute.evaluation import Evaluator evaluator = Evaluator() evaluator.evaluate(env, ['imp_quality', 'pred_downstream_local', 'pred_downstream_fed']) evaluator.show_results()","title":"Home"},{"location":"#welcome-to-fedimpute","text":"FedImpute is a benchmarking and evaluation tool to assess the effectiveness of federated imputation across various missing data scenarios.","title":"Welcome to FedImpute"},{"location":"#installation","text":"Install python >= 3.8.0 python -m venv ./venv # window gitbash source ./venv/Scripts/activate # linux/unix source ./venv/bin/activate Install the required packages pip install -r requirements.txt","title":"Installation"},{"location":"#basic-usage","text":"","title":"Basic Usage"},{"location":"#step-1-prepare-data","text":"import numpy as np data = np.random.rand(10000, 10) data_config = { 'task_type': 'regression', 'num_cols': 9, }","title":"Step 1. Prepare Data"},{"location":"#step-2-simulate-federated-missing-data-scenario","text":"from fedimpute.simulator import Simulator simulator = Simulator() simulation_results = simulator.simulate_scenario( data, data_config, num_clients = 10, dp_strategy='iid-even', ms_mech_type='mcar', verbose=1 )","title":"Step 2. Simulate Federated Missing Data Scenario"},{"location":"#step-3-execute-federated-imputation-algorithms","text":"from fedimpute.execution_environment import FedImputeEnv env = FedImputeEnv() env.configuration(imputer = 'gain', fed_strategy='fedavg', fit_mode = 'fed') env.setup_from_simulator(simulator = simulator, verbose=1) env.run_fed_imputation()","title":"Step 3. Execute Federated Imputation Algorithms"},{"location":"#step-4-evaluate-imputation-outcomes","text":"from fedimpute.evaluation import Evaluator evaluator = Evaluator() evaluator.evaluate(env, ['imp_quality', 'pred_downstream_local', 'pred_downstream_fed']) evaluator.show_results()","title":"Step 4. Evaluate imputation outcomes"},{"location":"about/","text":"Arbor mecum nostro Rhesi Illic spumam Lorem markdownum India exarsit ignibus aequoris Titan et postera vates: corpus, poenae inque. Ut arce, motu, dispar traiecit Lacinia tamen . Fudi vix non membra heros. Lyciae erat nudorum media, dei vicit dolorem frustra leni aequor at concita soror monstris manumque vulnus. Silvis optabat . Incepti de currus, cum urit sperato poenas sine, fata matris aliisque tellurem visum Cycno nupta. Fatigatum aestus! Est niveo serpentem sit Quoque Troum. Sermone et nunc tot credite aequem meri quam tutos, peti stravere, gregibus novavit et. Mihi Iuppiter mirabile, quo grave furibunda nunc gemitus, guttura Patraeque funeris favilla. Flores Triptolemus Matri. var pda_postscript_dma = postscript_cmos_mail(office.monochrome(46), koffice_ascii, mailItunes); node += cable_bezel_menu; if (powerFatAtm.clipboard_text_vertical.bccKvmLeaf(dmaOverwriteAscii, plain) + passiveCameraWaveform(462879)) { gateway = multicasting(drive, hubMashupAvatar.floppy_zero_qwerty.rom_linux_log(digital, dllDebug, 2)); } Sit est ternisque inter Tamen illis sedare Frigus; natalis rege isset dilaniat auras. Vero deam premis habitat hinc sternuntur meritus pedum et cum. Lemnius crescentemque lugebere flere os illic quamquam facto dextera quae tantum color vestes hoc veniunt magnus quiete: et. Erunt rudis et dolor trahat Philoctete tormentis Atlas Iphide partibus! Cycnum abiit lunae fuit defendere mutantur quadriiugo neci; fui unum, Cycnum agebat? Pater illa ergo virgae lapidumque domitos, sororis tu mitior carmina innixus: confusa sumus. Si et, maerentes ortas Daedalon tectoque genitor famuli. Enim paventem armis dignus vis instructo usque animoque, ignara aper iter est campus laceris in iniecit Oileos. In tepido tamen: artus illa ramisque desinite aures, diversae? Promptum fuit accessit ambiguum querulas consenuere, te alii herbas vox conplexusque. Aestuat mihi opes miser, ratis, circumdata aurum. Hunc mihi exiguas gelidis ab faciem, et Ceyx draconibus, Corythumque diversa, alis Priapi.","title":"Arbor mecum nostro Rhesi"},{"location":"about/#arbor-mecum-nostro-rhesi","text":"","title":"Arbor mecum nostro Rhesi"},{"location":"about/#illic-spumam","text":"Lorem markdownum India exarsit ignibus aequoris Titan et postera vates: corpus, poenae inque. Ut arce, motu, dispar traiecit Lacinia tamen . Fudi vix non membra heros. Lyciae erat nudorum media, dei vicit dolorem frustra leni aequor at concita soror monstris manumque vulnus. Silvis optabat . Incepti de currus, cum urit sperato poenas sine, fata matris aliisque tellurem visum Cycno nupta. Fatigatum aestus!","title":"Illic spumam"},{"location":"about/#est-niveo-serpentem-sit","text":"Quoque Troum. Sermone et nunc tot credite aequem meri quam tutos, peti stravere, gregibus novavit et. Mihi Iuppiter mirabile, quo grave furibunda nunc gemitus, guttura Patraeque funeris favilla. Flores Triptolemus Matri. var pda_postscript_dma = postscript_cmos_mail(office.monochrome(46), koffice_ascii, mailItunes); node += cable_bezel_menu; if (powerFatAtm.clipboard_text_vertical.bccKvmLeaf(dmaOverwriteAscii, plain) + passiveCameraWaveform(462879)) { gateway = multicasting(drive, hubMashupAvatar.floppy_zero_qwerty.rom_linux_log(digital, dllDebug, 2)); }","title":"Est niveo serpentem sit"},{"location":"about/#sit-est-ternisque-inter","text":"Tamen illis sedare Frigus; natalis rege isset dilaniat auras. Vero deam premis habitat hinc sternuntur meritus pedum et cum. Lemnius crescentemque lugebere flere os illic quamquam facto dextera quae tantum color vestes hoc veniunt magnus quiete: et. Erunt rudis et dolor trahat Philoctete tormentis Atlas Iphide partibus! Cycnum abiit lunae fuit defendere mutantur quadriiugo neci; fui unum, Cycnum agebat? Pater illa ergo virgae lapidumque domitos, sororis tu mitior carmina innixus: confusa sumus. Si et, maerentes ortas Daedalon tectoque genitor famuli. Enim paventem armis dignus vis instructo usque animoque, ignara aper iter est campus laceris in iniecit Oileos. In tepido tamen: artus illa ramisque desinite aures, diversae? Promptum fuit accessit ambiguum querulas consenuere, te alii herbas vox conplexusque. Aestuat mihi opes miser, ratis, circumdata aurum. Hunc mihi exiguas gelidis ab faciem, et Ceyx draconibus, Corythumque diversa, alis Priapi.","title":"Sit est ternisque inter"},{"location":"overview/","text":"Overview of FedImpute FedImpute is an open-source Python package designed to facilitate the simulation, imputation and evaluation of missing data in federated learning environments. By leveraging advanced statistical and machine learning imputation techniques, FedImpute enables collaborative data imputation under federated data scenario. This package is ideal for researchers and practitioners working with decentralized datasets with missing data and care about how to design and evaluate the state-of-art missing data imputation method under federated learning evironment. Understanding Missing Data in Horizontal Federated Learning Missing data occurs when <NA> data value is stored for a variable in an observation within a dataset. In data analysis, missing data can significantly impact the quality of insights and the performance of predictive models. The causes of missing data can vary widely, including data entry errors, non-response in surveys, or interruptions in data collection. It's crucial to address these gaps effectively, as improper handling can lead to biased estimates and incorrect conclusions. Types of Missing Data Missing data can be categorized into three types, each with its own implications for data analysis: Missing Completely at Random (MCAR) : The probability of a data point being missing is the arbitary random. Missing at Random (MAR) : The probability of a data point being missing is related to other observed variables, but not to the missing data itself. Missing Not at Random (MNAR) : The probability of a data point being missing is related to the reason it is missing. For more information on missing data, refer to the Missing Data Introduction . Missing Data Under Federated Learning Scenario Horizontal federated learning (HFL) involves a scenario where multiple parties, each with their own datasets. These datasets often have the same feature space but different observations. Usually, a common case of HFL is when the data is distributed across multiple silos, for example, hospitals, banks, or research institutions. In these scenarios, missing data can be a significant challenge, as for these common application domains such as healthcare, the missing data is very prevalent. The missing data scenario under these scenarios can be further complex, because of the following dimensions: Missing Mechanism Diversity . Missing values in the data can occur due to different reasons and are modeled through missing mechanisms, which are categorized into three distinct types depending upon how the missing values are related to the data. Missing Mechanism Heterogeneity . Missing values in the same feature can be due to different missing mechanisms across silos. Data Heterogeneity . The data across silos can be non-iid to varying degrees. Missing Data Imputation of Federated Datasets A common approach to handling missing data is imputation, where missing values are estimated based on the observed data. More details of imputation methods and their performance can be found in the How to deal with missing values? , Imputation Book , Hyperimpute . Under HFL, effective strategies for handling missing data must consider how to unify the decentralized or local imputation techniques, where each party performed independently. By using common federated learning solutions to allow for collaborative imputation without exposing individual data points, we call it Federated Imputation . Due to the reason of the complexity of the problem, it is important to have a benchmarking tool to rapidly evaluate the performance of federated imputation algorithms under different missing data scenarios. FedImpute is designed to address this need. Features of FedImpute Flexible Missing Data Simulation : Provide flexible API to simulate missing data scenarios under various missing data distribution and data partition strategies. Built-in Federated Imputation Methods : Supports multiple imputation techniques, including mean, and model-based approaches, tailored for distributed data. Easy Integration : Designed to be easily extended with federated imputation algorithms and workflows. Customizability : Offers extensive configuration options to adapt the imputation process to specific needs. Architecture and Components FedImpute is built on top of the following components: Federated Missing Data Scenario Simulation , Federated Imputation Execution Environment , and Evaluation . Federated Missing Data Scenario Simulation : This component simulates missing data scenarios under various missing data distribution and data partition strategies. Federated Imputation Execution Environment : This component executes federated imputation algorithms on the simulated missing data scenarios. Evaluation : This component evaluates the imputation outcomes and provides insights into the performance of the imputation algorithms. License FedImpute is released under the GPL v3.0 License, allowing free use, modification, and distribution of the software. This license encourages open collaboration by permitting the incorporation of this package into both open and closed-source projects.","title":"Overview"},{"location":"overview/#overview-of-fedimpute","text":"FedImpute is an open-source Python package designed to facilitate the simulation, imputation and evaluation of missing data in federated learning environments. By leveraging advanced statistical and machine learning imputation techniques, FedImpute enables collaborative data imputation under federated data scenario. This package is ideal for researchers and practitioners working with decentralized datasets with missing data and care about how to design and evaluate the state-of-art missing data imputation method under federated learning evironment.","title":"Overview of FedImpute"},{"location":"overview/#understanding-missing-data-in-horizontal-federated-learning","text":"Missing data occurs when <NA> data value is stored for a variable in an observation within a dataset. In data analysis, missing data can significantly impact the quality of insights and the performance of predictive models. The causes of missing data can vary widely, including data entry errors, non-response in surveys, or interruptions in data collection. It's crucial to address these gaps effectively, as improper handling can lead to biased estimates and incorrect conclusions.","title":"Understanding Missing Data in Horizontal Federated Learning"},{"location":"overview/#types-of-missing-data","text":"Missing data can be categorized into three types, each with its own implications for data analysis: Missing Completely at Random (MCAR) : The probability of a data point being missing is the arbitary random. Missing at Random (MAR) : The probability of a data point being missing is related to other observed variables, but not to the missing data itself. Missing Not at Random (MNAR) : The probability of a data point being missing is related to the reason it is missing. For more information on missing data, refer to the Missing Data Introduction .","title":"Types of Missing Data"},{"location":"overview/#missing-data-under-federated-learning-scenario","text":"Horizontal federated learning (HFL) involves a scenario where multiple parties, each with their own datasets. These datasets often have the same feature space but different observations. Usually, a common case of HFL is when the data is distributed across multiple silos, for example, hospitals, banks, or research institutions. In these scenarios, missing data can be a significant challenge, as for these common application domains such as healthcare, the missing data is very prevalent. The missing data scenario under these scenarios can be further complex, because of the following dimensions: Missing Mechanism Diversity . Missing values in the data can occur due to different reasons and are modeled through missing mechanisms, which are categorized into three distinct types depending upon how the missing values are related to the data. Missing Mechanism Heterogeneity . Missing values in the same feature can be due to different missing mechanisms across silos. Data Heterogeneity . The data across silos can be non-iid to varying degrees.","title":"Missing Data Under Federated Learning Scenario"},{"location":"overview/#missing-data-imputation-of-federated-datasets","text":"A common approach to handling missing data is imputation, where missing values are estimated based on the observed data. More details of imputation methods and their performance can be found in the How to deal with missing values? , Imputation Book , Hyperimpute . Under HFL, effective strategies for handling missing data must consider how to unify the decentralized or local imputation techniques, where each party performed independently. By using common federated learning solutions to allow for collaborative imputation without exposing individual data points, we call it Federated Imputation . Due to the reason of the complexity of the problem, it is important to have a benchmarking tool to rapidly evaluate the performance of federated imputation algorithms under different missing data scenarios. FedImpute is designed to address this need.","title":"Missing Data Imputation of Federated Datasets"},{"location":"overview/#features-of-fedimpute","text":"Flexible Missing Data Simulation : Provide flexible API to simulate missing data scenarios under various missing data distribution and data partition strategies. Built-in Federated Imputation Methods : Supports multiple imputation techniques, including mean, and model-based approaches, tailored for distributed data. Easy Integration : Designed to be easily extended with federated imputation algorithms and workflows. Customizability : Offers extensive configuration options to adapt the imputation process to specific needs.","title":"Features of FedImpute"},{"location":"overview/#architecture-and-components","text":"FedImpute is built on top of the following components: Federated Missing Data Scenario Simulation , Federated Imputation Execution Environment , and Evaluation . Federated Missing Data Scenario Simulation : This component simulates missing data scenarios under various missing data distribution and data partition strategies. Federated Imputation Execution Environment : This component executes federated imputation algorithms on the simulated missing data scenarios. Evaluation : This component evaluates the imputation outcomes and provides insights into the performance of the imputation algorithms.","title":"Architecture and Components"},{"location":"overview/#license","text":"FedImpute is released under the GPL v3.0 License, allowing free use, modification, and distribution of the software. This license encourages open collaboration by permitting the incorporation of this package into both open and closed-source projects.","title":"License"},{"location":"user-guide/aa/","text":"","title":"aa"},{"location":"user-guide/bb/","text":"","title":"bb"}]}